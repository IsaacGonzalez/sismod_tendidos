# proportion.rb
#
# ruby proportion.rb            # ejecuta las pruebas
#
require 'json'                  # solo si luego quieres .to_json
require 'minitest/autorun'

def repetitions(*quantities)
  quantities = quantities.flatten.map(&:to_i)
  raise ArgumentError, 'Debes ingresar al menos un n√∫mero' if quantities.empty?

  mcd = quantities.reduce { |acc, q| acc.gcd(q) }
  min = quantities.min

  if mcd <= 9 
    divisor = min
  else
    divisor = mcd
  end

  {
    quantities: quantities,
    mcd:        mcd,
    min:        min,
    divisor:    divisor,
    sobrante:   mcd <= 9 ? true : false,
    result:     quantities.map { |q| q / divisor }
  }
end

#--- Pruebas ---------------------------------------------------------------
class ProportionTest < Minitest::Test

    def test_caso_1
        input     = [800, 1600, 2400, 3200, 3200, 2400, 2400]
        esperado  = [1, 2, 3, 4, 4, 3, 3]
        caso_1_resultado = repetitions(input)

        puts "Caso 1"
        puts JSON.pretty_generate(caso_1_resultado)

        assert_equal esperado, caso_1_resultado[:result]
    end

    def test_caso_2
        input     = [850, 1700, 2550, 3400, 3400, 2550, 2550]
        esperado  = [1, 2, 3, 4, 4, 3, 3]
        caso_2_resultado = repetitions(input)

        puts "Caso 2"
        puts JSON.pretty_generate(caso_2_resultado)

        assert_equal esperado, caso_2_resultado[:result]
    end

    def test_caso_3
        input     = [800, 1632, 2583, 3301, 3301, 2583, 2583]
        esperado  = [1, 2, 3, 4, 4, 3, 3]
        caso_3_resultado = repetitions(input)
        puts "Caso 3"
        puts JSON.pretty_generate(caso_3_resultado)
        
        assert_equal esperado, caso_3_resultado[:result]
    end


    # Fragrant Lilac 
    def test_caso_4
        input     = [1639, 2070, 1294, 260]
        esperado  = [9, 11, 7, 2]
        caso_4_resultado = repetitions(input)
        puts "Caso 4 -- Fragrant Lilac"
        puts JSON.pretty_generate(caso_4_resultado)
        
        # assert_equal esperado, caso_3_resultado[:result]
    end

    # Strawberry Cream
    def test_caso_5
        input     = [1064, 2764, 3264, 1440]
        esperado  = [9, 11, 7, 2]
        caso_5_resultado = repetitions(input)
        puts "Caso 5 -- Strawberry Cream"
        puts JSON.pretty_generate(caso_5_resultado)
    end

    # black 
    def test_caso_6
        input     = [1166, 2668, 2912, 1464]
        esperado  = [9, 11, 7, 2]
        caso_6_resultado = repetitions(input)
        puts "Caso 6 -- Black"
        puts JSON.pretty_generate(caso_6_resultado)
    end

end